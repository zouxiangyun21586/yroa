<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- <http pattern="/getCodeImgServlet" security="none"/> -->
	<http>
		<!-- 不拦截login.jsp -->
		<intercept-url pattern="/login*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<!--仅拦截到manager下面的内容，具备access对应权限的 -->
		<intercept-url pattern="/com/**" />
		<!-- 设置登录过滤器 -->
		<custom-filter before="FORM_LOGIN_FILTER" ref="authenticationProcessingFilter" />
		<!-- 登录表单设置 -->
		<form-login login-page="/login" default-target-url="/main" authentication-failure-url="/login" />
		<!-- 登出操作后跳转到该页面 -->
		<logout logout-success-url="/loggedout" delete-cookies="JSESSIONID" />
		<remember-me />

		<!-- SESSION超时后跳转到该页面 -->
		<session-management invalid-session-url="/timeout"></session-management>
	</http>

	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<!-- 直接使用SQL语句查询登录帐号对应权限， users-by-username-query：查询登录用户是否存在 authorities-by-username-query：查询登录用户权限(登录用户可以不属于任何组，从t_user_role表中获取权限) 
				group-authorities-by-username-query：查询登录用户所在组的权限 -->
			<jdbc-user-service data-source-ref="dataSource"
			users-by-username-query="SELECT ACC.ACCOUNT ,ACC.`PASSWORD`,true FROM ACCOUNT AS ACC WHERE ACC.account= ?"
			authorities-by-username-query="SELECT A.account,P.`name` FROM ACCOUNT AS A 
												LEFT OUTER JOIN ROLEACCOUNT AS RA ON (A.id = RA.accountId) 
												LEFT OUTER JOIN ROLE AS R ON (R.id = RA.roleId)
												LEFT OUTER JOIN ROLEPOWERS AS RP ON (RP.roleId = R.id)
												LEFT OUTER JOIN POWERS AS P ON (P.id = RP.powersId)
												WHERE A.account = ?" />
		</authentication-provider>
	</authentication-manager>

	<!-- 自定义消息 -->
	<b:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<b:property name="basename"
			value="classpath:org/springframework/security/messages" />
	</b:bean>

	<!-- 定制登录过滤器 -->
	<beans:bean id="loginSuccessHandler" class="com.security.LoginSuccessHandler">
		<b:property name="defaultTargetUrl">
			<!-- 登录成功后转发到该页面 -->
			<b:value>/main</b:value>
		</b:property>
	</beans:bean>
	<beans:bean id="authenticationProcessingFilter" class="com.security.LoginUsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationSuccessHandler" ref="loginSuccessHandler"></beans:property>
		<beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler"></beans:property>
		<beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
	</beans:bean>
	<beans:bean id="authenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl">
			<!-- 登录失败后转发到该页面 -->
			<beans:value>/login</beans:value>
		</beans:property>
	</beans:bean>
</beans:beans>